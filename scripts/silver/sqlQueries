

-- fix crm_cust_info

Insert Into silver.crm_cust_info(
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date
)
select 
cst_id,
cst_key,
TRIM(cst_firstname) as cst_firstname,
TRIM(cst_lastname) as cst_lastname,
CASE
WHEN Upper(TRIM(cst_marital_status)) = 'S' then 'Single'
WHEN Upper(TRIM(cst_marital_status)) = 'M' then 'Married'
else 'n/a'
end as cst_marital_status,
CASE
WHEN Upper(TRIM(cst_gndr)) = 'M' then 'Male'
WHEN Upper(TRIM(cst_gndr)) = 'F' then 'Female'
else 'n/a'
end as cst_gndr,
cst_create_date
from
(
select *,
ROW_NUMBER() OVER(PARTITION by cst_id ORDER BY cst_create_date DESC) as rank_by_create_date
from bronze.crm_cust_info
) as t
WHERE rank_by_create_date=1 and cst_id is not null;


-- fix crm_prd_info


IF OBJECT_ID('silver.crm_prd_info','U') IS NOT NULL
   DROP TABLE silver.crm_prd_info;
GO

CREATE TABLE silver.crm_prd_info(
prd_id INT,
cat_id NVARCHAR(50),
prd_key NVARCHAR(50),
prd_nm NVARCHAR(50),
prd_cost INT,
prd_line NVARCHAR(50),
prd_start_dt DATE,
prd_end_dt DATE,
dwh_create_date DATETIME2 DEFAULT GETDATE()
);




INSERT INTO silver.crm_prd_info(
prd_id,
cat_id,
prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
)
select 
prd_id,
REPLACE(SUBSTRING(prd_key,1,5),'-','_') as Cat_id,
SUBSTRING(prd_key,7,LEN(prd_key)) as prd_key,
prd_num,
ISNULL(prd_cost,0) as prd_cost,
CASE
WHEN UPPER(TRIM(prd_line))='M' THEN 'Mountain'
WHEN UPPER(TRIM(prd_line))='R' THEN 'Road'
WHEN UPPER(TRIM(prd_line))='S' THEN 'Other Sales'
WHEN UPPER(TRIM(prd_line))='T' THEN 'Touring'
ELSE 'n/a'
END AS prd_line,
CAST(prd_start_dt AS DATE) AS prd_start_dt,
CAST(LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) -1 AS DATE) AS prd_end_dt
from bronze.crm_prd_info






-- fix crm_sales_details

IF OBJECT_ID('silver.crm_sales_details','U') IS NOT NULL
   DROP TABLE silver.crm_sales_details;
GO

CREATE TABLE silver.crm_sales_details(
sls_ord_num NVARCHAR(50),
sls_prd_key NVARCHAR(50),
sls_cust_id INT,
sls_order_dt DATE,
sls_ship_dt DATE,
sls_due_dt DATE,
sls_sales INT,
sls_quantity INT,
sls_price INT,
dwh_create_date DATETIME2 DEFAULT GETDATE()
);



INSERT INTO silver.crm_sales_details(
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales,
sls_quantity,
sls_price
)
select 
sls_ord_num,
sls_prd_key,
sls_cust_id,
CASE 
WHEN sls_order_dt=0 OR len(sls_order_dt) !=8 THEN NULL
ELSE CAST(CAST(sls_order_dt as varchar)AS DATE)
END AS sls_order_dt,
CASE 
WHEN sls_ship_dt=0 OR len(sls_ship_dt) !=8 THEN NULL
ELSE CAST(CAST(sls_ship_dt as varchar)AS DATE)
END AS sls_ship_dt,
CASE 
WHEN sls_due_dt=0 OR len(sls_due_dt) !=8 THEN NULL
ELSE CAST(CAST(sls_due_dt as varchar)AS DATE)
END AS sls_due_dt,
CASE
WHEN sls_sales IS NULL OR SLS_SALES <=0 OR SLS_SALES != sls_quantity * ABS(SLS_PRICE)
THEN sls_quantity * abs(sls_price)
ELSE sls_sales
END AS sls_sales,
CASE
WHEN sls_price IS NULL OR SLS_PRICE <=0 OR SLS_PRICE != sls_sales / sls_quantity
THEN SLS_SALES / sls_quantity
else sls_price
END AS sls_price,
sls_quantity
from bronze.crm_sales_details;


-- inset into silver erp_cust_az12

INSERT INTO silver.erp_cust_az12(
cid,
bdate,
gen
)
SELECT 
CASE 
WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid,4,len(cid))
ELSE CID
END CID,
CASE
WHEN bdate> GETDATE() or bdate < '1925-10-17' THEN NULL
ELSE bdate
END AS bdate,
CASE
WHEN UPPER(TRIM(gen)) IN ('M','MALE') THEN 'MALE'
WHEN UPPER(TRIM(gen)) IN ('F','FEMALE') THEN 'FEMALE'
ELSE 'n/a'
END AS gen
FROM bronze.erp_cust_az12;



-- insert into silver erp_loc_a101

INSERT INTO silver.erp_loc_a101(
cid,
cntry
)
select 
REPLACE(cid,'-','') as cid,
CASE
WHEN TRIM(cntry)='DE' THEN 'Germany'
WHEN TRIM(cntry) IN('US','USA') THEN 'United States'
when TRIM(cntry)='' or cntry IS NULL THEN 'n/a'
ELSE cntry
END AS cntry
from  bronze.erp_loc_a101;


-- insert into silver erp_px_cat_g1v2

INSERT INTO  silver.erp_px_cat_g1v2(
id,
cat,
subcat,
maintenance
)
select
id,
cat,
subcat,
maintenance
from bronze.erp_px_cat_g1v2;

